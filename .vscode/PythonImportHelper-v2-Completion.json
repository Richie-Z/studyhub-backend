[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "UnicodeUsernameValidator",
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "EmailValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "RegistrationForm",
        "importPath": "authentication.forms",
        "description": "authentication.forms",
        "isExtraImport": true,
        "detail": "authentication.forms",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "authentication.models",
        "description": "authentication.models",
        "isExtraImport": true,
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "project.helpers",
        "description": "project.helpers",
        "isExtraImport": true,
        "detail": "project.helpers",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "Repository",
        "importPath": "repository.models",
        "description": "repository.models",
        "isExtraImport": true,
        "detail": "repository.models",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "authentication.migrations.0001_initial",
        "description": "authentication.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"User\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "authentication.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AuthenticationConfig",
        "kind": 6,
        "importPath": "authentication.apps",
        "description": "authentication.apps",
        "peekOfCode": "class AuthenticationConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'authentication'",
        "detail": "authentication.apps",
        "documentation": {}
    },
    {
        "label": "RegistrationForm",
        "kind": 6,
        "importPath": "authentication.forms",
        "description": "authentication.forms",
        "peekOfCode": "class RegistrationForm(forms.Form):\n    username = forms.CharField(\n        max_length=150,\n        validators=[UnicodeUsernameValidator()],\n        help_text=\"Enter a username\",\n    )\n    email = forms.EmailField(\n        validators=[EmailValidator()],\n        help_text=\"Enter your email address\",\n    )",
        "detail": "authentication.forms",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "authentication.models",
        "description": "authentication.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n    def create_user(self, username, full_name, email, password=None, **extra_fields):\n        if not email:\n            raise ValueError(\"The Email field must be set\")\n        if not username:\n            raise ValueError(\"The Username field must be set\")\n        if not full_name:\n            raise ValueError(\"The Full Name field must be set\")\n        email = self.normalize_email(email)\n        user = self.model(",
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "authentication.models",
        "description": "authentication.models",
        "peekOfCode": "class User(AbstractBaseUser):\n    username = models.CharField(max_length=200)\n    email = models.EmailField(unique=True)\n    full_name = models.CharField(max_length=30)\n    USERNAME_FIELD = \"email\"\n    REQUIRED_FIELDS = [\"username\", \"full_name\"]\n    objects = UserManager()\n    def __str__(self):\n        return self.email",
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "LoginSerializer",
        "kind": 6,
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "peekOfCode": "class LoginSerializer(serializers.Serializer):\n    email = serializers.EmailField()\n    password = serializers.CharField()\n    def validate(self, data):\n        email = data.get(\"email\")\n        password = data.get(\"password\")\n        if email and password:\n            user = authenticate(email=email, password=password)\n            if not user:\n                raise serializers.ValidationError(\"Invalid email or password.\")",
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "authentication.urls",
        "description": "authentication.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"token/\", TokenObtainPairView.as_view(), name=\"token_obtain_pair\"),\n    path(\"token/refresh/\", TokenRefreshView.as_view(), name=\"token_refresh\"),\n    path(\"login\", LoginView.as_view(), name=\"login\"),\n    path(\"me\", UserInfoView.as_view(), name=\"me\"),\n    path(\"register\", RegisterView.as_view(), name=\"register\"),\n]",
        "detail": "authentication.urls",
        "documentation": {}
    },
    {
        "label": "LoginView",
        "kind": 6,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "class LoginView(APIView):\n    def post(self, request):\n        serializer = LoginSerializer(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        user = serializer.validated_data.get(\"user\")\n        refresh = RefreshToken.for_user(user)\n        return create_response(\n            \"Success Login\",\n            status.HTTP_200_OK,\n            data={",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "UserInfoView",
        "kind": 6,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "class UserInfoView(APIView):\n    def get(self, request):\n        user = request.user\n        data = {\n            \"user\": {\"username\": user.username, \"email\": user.email},\n        }\n        return create_response(\"Success Get User\", status.HTTP_200_OK, data)\nclass RegisterView(APIView):\n    def post(self, request):\n        form = RegistrationForm(request.POST)",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "kind": 6,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "class RegisterView(APIView):\n    def post(self, request):\n        form = RegistrationForm(request.POST)\n        if form.is_valid():\n            username = form.cleaned_data[\"username\"]\n            email = form.cleaned_data[\"email\"]\n            password = form.cleaned_data[\"password\"]\n            full_name = form.cleaned_data[\"full_name\"]\n            user = User.objects.create_user(\n                username=username, full_name=full_name, email=email, password=password",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "commit.migrations.0001_initial",
        "description": "commit.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"repository\", \"0001_initial\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Commit\",\n            fields=[",
        "detail": "commit.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CommitConfig",
        "kind": 6,
        "importPath": "commit.apps",
        "description": "commit.apps",
        "peekOfCode": "class CommitConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"commit\"",
        "detail": "commit.apps",
        "documentation": {}
    },
    {
        "label": "CommitManager",
        "kind": 6,
        "importPath": "commit.models",
        "description": "commit.models",
        "peekOfCode": "class CommitManager(models.Manager):\n    def create_commit(\n        self,\n        commit_msg,\n        user_id,\n        repository_id,\n        commit_date,\n        is_active=True,\n        is_rollback=False,\n    ):",
        "detail": "commit.models",
        "documentation": {}
    },
    {
        "label": "Commit",
        "kind": 6,
        "importPath": "commit.models",
        "description": "commit.models",
        "peekOfCode": "class Commit(models.Model):\n    commit_msg = models.CharField(max_length=255)\n    user_id = models.ForeignKey(User, on_delete=models.CASCADE)\n    repository_id = models.ForeignKey(Repository, on_delete=models.CASCADE)\n    commit_date = models.DateField()\n    is_active = models.BooleanField(default=True)\n    is_rollback = models.BooleanField(default=False)\n    objects = CommitManager()\n    def __str__(self) -> str:\n        return self.commit_msg",
        "detail": "commit.models",
        "documentation": {}
    },
    {
        "label": "FolderManager",
        "kind": 6,
        "importPath": "commit.models",
        "description": "commit.models",
        "peekOfCode": "class FolderManager(models.Manager):\n    def create_folder(self, commit_id, folder_name):\n        folder = self.model(commit_id=commit_id, folder_name=folder_name)\n        folder.save()\n        return folder\nclass CommitFolder(models.Model):\n    commit_id = models.ForeignKey(Commit, on_delete=models.CASCADE)\n    folder_name = models.CharField(max_length=255)\n    objects = FolderManager()\n    def __str__(self) -> str:",
        "detail": "commit.models",
        "documentation": {}
    },
    {
        "label": "CommitFolder",
        "kind": 6,
        "importPath": "commit.models",
        "description": "commit.models",
        "peekOfCode": "class CommitFolder(models.Model):\n    commit_id = models.ForeignKey(Commit, on_delete=models.CASCADE)\n    folder_name = models.CharField(max_length=255)\n    objects = FolderManager()\n    def __str__(self) -> str:\n        return self.folder_name\nclass FileManager(models.Manager):\n    def create_file(self, commit_id, file_name, commit_folder_id):\n        file = self.model(\n            commit_id=commit_id, file_name=file_name, commit_folder_id=commit_folder_id",
        "detail": "commit.models",
        "documentation": {}
    },
    {
        "label": "FileManager",
        "kind": 6,
        "importPath": "commit.models",
        "description": "commit.models",
        "peekOfCode": "class FileManager(models.Manager):\n    def create_file(self, commit_id, file_name, commit_folder_id):\n        file = self.model(\n            commit_id=commit_id, file_name=file_name, commit_folder_id=commit_folder_id\n        )\n        file.save()\n        return file\nclass CommitFile(models.Model):\n    commit_id = models.ForeignKey(Commit, on_delete=models.CASCADE)\n    file_name = models.CharField(max_length=255)",
        "detail": "commit.models",
        "documentation": {}
    },
    {
        "label": "CommitFile",
        "kind": 6,
        "importPath": "commit.models",
        "description": "commit.models",
        "peekOfCode": "class CommitFile(models.Model):\n    commit_id = models.ForeignKey(Commit, on_delete=models.CASCADE)\n    file_name = models.CharField(max_length=255)\n    commit_folder_id = models.ForeignKey(\n        CommitFolder, on_delete=models.CASCADE, null=True\n    )\n    objects = FileManager()\n    def __str__(self) -> str:\n        return self.file_name",
        "detail": "commit.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "commit.urls",
        "description": "commit.urls",
        "peekOfCode": "urlpatterns = []",
        "detail": "commit.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "project.asgi",
        "description": "project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "project.asgi",
        "documentation": {}
    },
    {
        "label": "create_response",
        "kind": 2,
        "importPath": "project.helpers",
        "description": "project.helpers",
        "peekOfCode": "def create_response(message, status_code, data=None):\n    return Response(\n        data={\"status_code\": status_code, \"message\": message, \"data\": data},\n        status=status_code,\n    )",
        "detail": "project.helpers",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = \"django-insecure-pe@odfzoy!w^0xx+1p+3lvqb_=+s5@c1c_x*@8pw!83=4nzcj#\"\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-pe@odfzoy!w^0xx+1p+3lvqb_=+s5@c1c_x*@8pw!83=4nzcj#\"\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",\n    \"rest_framework_simplejwt\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",\n    \"rest_framework_simplejwt\",\n    \"authentication.apps.AuthenticationConfig\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"project.urls\"",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "ROOT_URLCONF = \"project.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "WSGI_APPLICATION = \"project.wsgi.application\"\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.mysql\",\n        \"NAME\": \"studyhub\",\n        \"USER\": \"root\",\n        \"PASSWORD\": \"1133\",\n        \"HOST\": \"localhost\",\n        \"PORT\": \"3306\",\n    }",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.mysql\",\n        \"NAME\": \"studyhub\",\n        \"USER\": \"root\",\n        \"PASSWORD\": \"1133\",\n        \"HOST\": \"localhost\",\n        \"PORT\": \"3306\",\n    }\n}",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\nSTATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"authentication.User\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\nSTATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"authentication.User\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ],",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nSTATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"authentication.User\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ],\n}",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "USE_TZ = True\nSTATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"authentication.User\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ],\n}\nfrom datetime import timedelta",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"authentication.User\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ],\n}\nfrom datetime import timedelta\nSIMPLE_JWT = {",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"authentication.User\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ],\n}\nfrom datetime import timedelta\nSIMPLE_JWT = {\n    \"AUTH_HEADER_TYPES\": (\"Bearer\",),",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"authentication.User\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ],\n}\nfrom datetime import timedelta\nSIMPLE_JWT = {\n    \"AUTH_HEADER_TYPES\": (\"Bearer\",),\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=1),",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n    ],\n}\nfrom datetime import timedelta\nSIMPLE_JWT = {\n    \"AUTH_HEADER_TYPES\": (\"Bearer\",),\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=1),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1),",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"AUTH_HEADER_TYPES\": (\"Bearer\",),\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=1),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1),\n}",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "project.urls",
        "description": "project.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"api/authentication/\", include(\"authentication.urls\")),\n    path(\"api/repository/\", include(\"repository.urls\")),\n    path(\"api/commit/\", include(\"commit.urls\")),\n]",
        "detail": "project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "project.wsgi",
        "description": "project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "project.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "repository.migrations.0001_initial",
        "description": "repository.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Repository\",\n            fields=[\n                (",
        "detail": "repository.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "RepositoryConfig",
        "kind": 6,
        "importPath": "repository.apps",
        "description": "repository.apps",
        "peekOfCode": "class RepositoryConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"repository\"",
        "detail": "repository.apps",
        "documentation": {}
    },
    {
        "label": "RepositoryManager",
        "kind": 6,
        "importPath": "repository.models",
        "description": "repository.models",
        "peekOfCode": "class RepositoryManager(models.Manager):\n    def create_repository(self, name, detail, user_id, is_private=False):\n        repository = self.model(\n            name=name, detail=detail, user_id=user_id, is_private=is_private\n        )\n        repository.save()\n        return repository\n    def get_public_repositories(self):\n        return self.filter(is_private=False)\nclass Repository(models.Model):",
        "detail": "repository.models",
        "documentation": {}
    },
    {
        "label": "Repository",
        "kind": 6,
        "importPath": "repository.models",
        "description": "repository.models",
        "peekOfCode": "class Repository(models.Model):\n    name = models.CharField(max_length=255)\n    detail = models.TextField()\n    user_id = models.ForeignKey(User, on_delete=models.CASCADE)\n    is_private = models.BooleanField(default=False)\n    objects = RepositoryManager()\n    def __str__(self):\n        return self.name\nclass StarRepositoryManager(models.Manager):\n    def toggle(self, user_id, repository_id):",
        "detail": "repository.models",
        "documentation": {}
    },
    {
        "label": "StarRepositoryManager",
        "kind": 6,
        "importPath": "repository.models",
        "description": "repository.models",
        "peekOfCode": "class StarRepositoryManager(models.Manager):\n    def toggle(self, user_id, repository_id):\n        try:\n            star_repo = self.get(user_id=user_id, repository_id=repository_id)\n            star_repo.delete()\n            return False  # Indicate that the data was deleted\n        except StarRepository.DoesNotExist:\n            self.create(user_id=user_id, repository_id=repository_id)\n            return True  # Indicate that the data was created\nclass StarRepository(models.Model):",
        "detail": "repository.models",
        "documentation": {}
    },
    {
        "label": "StarRepository",
        "kind": 6,
        "importPath": "repository.models",
        "description": "repository.models",
        "peekOfCode": "class StarRepository(models.Model):\n    user_id = models.ForeignKey(User, on_delete=models.CASCADE)\n    repository_id = models.ForeignKey(Repository, on_delete=models.CASCADE)\n    objects = StarRepositoryManager()\n    def __str__(self):\n        return self.name",
        "detail": "repository.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "repository.urls",
        "description": "repository.urls",
        "peekOfCode": "urlpatterns = []",
        "detail": "repository.urls",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]